services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend-container
    volumes:
      - ./backend:/backend
    ports:
      - "1337:1337"
    networks:
      - bike_network
    depends_on:
      - database
    environment:
      DB_HOST: database
      DB_PORT: 3306
      DB_USER: dbadm
      DB_PASSWORD: scrt_pa_s_db
      DB_NAME: vteam
    restart: always

  admin-web:
    build:
      context: ./frontend/admin-web
      dockerfile: Dockerfile
    container_name: admin-web-container
    ports:
      - "3000:3000"
    volumes:
      - ./admin-web:/src
    networks:
      - bike_network
    command: npm run start

  user-web:
    build: ./user-web
    container_name: user-web-container
    volumes:
      - ./user-web:/user-web
    networks:
      - bike_network

  user-app:
    build: ./user-app
    container_name: user-app-container
    volumes:
      - ./user-app:/user-app
    networks:
      - bike_network

  simulation:
    build: ./sim-soft
    networks:
      - bike_network
    container_name: simulation
    volumes:
      - ./sim-soft/src:/app

  database:
    image: mariadb:latest
    container_name: mariadb-compose
    environment:
      MYSQL_ROOT_PASSWORD: scrt_pa_s_db
      MYSQL_DATABASE: vteam
      MYSQL_USER: dbadm
      MYSQL_PASSWORD: scrt_pa_s_db
    ports:
      - "3306:3306"
    networks:
      - bike_network
    volumes:
    - "./backend/database/setup.sql:/docker-entrypoint-initdb.d/1.sql"
    - "./backend/database/ddl.sql:/docker-entrypoint-initdb.d/2.sql"

networks:
  bike_network:
    driver: bridge
